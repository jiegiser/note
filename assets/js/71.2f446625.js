(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{749:function(t,s,n){"use strict";n.r(s);var a=n(29),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"初始化项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化项目"}},[t._v("#")]),t._v(" 初始化项目")]),t._v(" "),n("p",[t._v("一般使用 ng new 项目名 这样的命令进行初始化项目。会比较慢，他会使用 npm 进行安装依赖。可以使用如下命令：")]),t._v(" "),n("p",[t._v("可以指定 css 预编译以及不需要路由模块等。")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("ng new project --skip-install --style css --routing "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),n("p",[t._v("对于 package.json 文件中版本号的一些说明：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前面有 ~ 就是说锁定前端两个版本号，6.5.x，最后一个如果有更新就会安装最新的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rxjs"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~6.5.2"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前面有 ^ 就是说锁定前面的大版本号，1.x.x；后面的两个版本号如果有最新就安装")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tslib"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^1.9.0"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 严格锁定版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zone.js"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.9.0"')]),t._v("\n")])])]),n("h2",{attrs:{id:"指令相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指令相关"}},[t._v("#")]),t._v(" 指令相关")]),t._v(" "),n("p",[t._v("ngFor 相关：获取索引、是否第一个元素、是否最后一个元素、可迭代对象中的索引号为奇数、是否偶数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ngFor"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"let menu of menus;let i = index;let first = first;let last = last;let odd = odd; let even = even"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("munu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("https://angular.cn/api/common/NgForOf")])]),t._v(" "),n("p",[t._v("ngIf 相关")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("*ngIf")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("条件表达式 else elseContent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  条件为真展示\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ng-template")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("#elseContent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  条件为假时展示\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ng-template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("h2",{attrs:{id:"事件处理和样式绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件处理和样式绑定"}},[t._v("#")]),t._v(" 事件处理和样式绑定")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("[class.样式类名]")]),t._v(' = "判断表达式" 是在应用单个 clas 时的常用技巧；')]),t._v(" "),n("li",[t._v("ngStyle "),n("code",[t._v("<div [ngStyle]=\"{ 'color': someColor }\"></div>")]),t._v(" ngStyle 由于是嵌入式样式，他会覆盖掉其他样式，使用时需谨慎；")]),t._v(" "),n("li",[t._v("使用方括号 [] 是数据绑定，如果带方括号，等号后面就是一个对象或表达式；")]),t._v(" "),n("li",[t._v("不适用方括号，等号后面 angular 认为是一个字符串，但如果我们此时在等号后使用 {{}} 就是和方括号等效的；")]),t._v(" "),n("li",[t._v("圆括号 () 用于事件绑定，等号后可以接表达式也可以是一个定义在类中的函数；")])]),t._v(" "),n("h2",{attrs:{id:"组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),n("p",[t._v("我们一般封装组件，如果需要属性的绑定通过 @input 进行表示，对于事件，如果需要增加事件回调。告诉外部调用者执行。通过 @output 来标识。")]),t._v(" "),n("h3",{attrs:{id:"组件的声明周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件的声明周期"}},[t._v("#")]),t._v(" 组件的声明周期")]),t._v(" "),n("ul",[n("li",[t._v("constructor：构造函数永远首先被调用")]),t._v(" "),n("li",[t._v("ngOnChanges：输入属性变化时被调用")]),t._v(" "),n("li",[t._v("ngOnInit：组件初始化被调用")]),t._v(" "),n("li",[t._v("ngDoCheck：脏值检测时调用")]),t._v(" "),n("li",[t._v("ngAfterContentInit：当内容投影 ng-content 完成时调用")]),t._v(" "),n("li",[t._v("ngAfterContentChecked：angular 检测投影内容时调用（多次）")]),t._v(" "),n("li",[t._v("ngAfterViewInit：当组件视图（子视图）初始化完成时")]),t._v(" "),n("li",[t._v("ngAfterViewChecked：当检测视图变化时（多次）")]),t._v(" "),n("li",[t._v("ngOnDestroy：当组件销毁时")])]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AfterContentChecked"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AfterContentInit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AfterViewChecked"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AfterViewInit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EventEmitter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Input"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OnChanges"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OnInit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SimpleChanges "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScrollableTabComponent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OnInit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OnChanges"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AfterContentInit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AfterContentChecked"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AfterViewInit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AfterViewChecked "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 构造函数永远首先被调用\n   */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 组件初始化完成，在这个函数中，我们可以安全的使用组件的属性和方法\n   */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ngOnInit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听自己组件本身数值变化-输入值的变化 @Input 属性发生变化")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数为索引对象，key 为属性的名字，value 为 SimpleChanges")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ngOnChanges")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SimpleChanges"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 组件内容初始化\n   */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ngAfterContentInit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 组件内容脏值检测\n   */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ngAfterContentChecked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 组件视图初始化-组件和他的子组件都初始化完成\n   */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ngAfterViewInit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 组件视图的脏值检测\n   */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ngAfterViewChecked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 组件销毁时执行\n   */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ngOnDestroy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ngDoCheck() {")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   console.log('组件脏值监测')")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("ng-content 相当于 vue 中的 slot 插槽。父组件向子组件传递内容。")]),t._v(" "),n("h3",{attrs:{id:"模板在组件类中的引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模板在组件类中的引用"}},[t._v("#")]),t._v(" 模板在组件类中的引用")]),t._v(" "),n("p",[n("code",[t._v("#")]),t._v(" 后面是给模板或者 dom 元素起一个引用名字以便可以在组件类或模板中进行引用")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("#helloDiv")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("然后在类中引用：")]),t._v(" "),n("p",[t._v("@ViewChild 是一个选择器，用来查找要引用的 dom 元素或者组件，ElementRef 是 dom 元素的一个包装类，因为 dom 元素不是 angular 中的类，所以需要一个包装类以便在 angular 中使用和标识其类型。")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ViewChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'helloDiv'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" helloDivRef"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ElementRef\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);