(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{758:function(s,t,a){"use strict";a.r(t);var e=a(29),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"flex-布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-布局"}},[s._v("#")]),s._v(" Flex 布局")]),s._v(" "),a("h2",{attrs:{id:"flex-布局是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-布局是什么"}},[s._v("#")]),s._v(" Flex 布局是什么")]),s._v(" "),a("p",[s._v("Flex 也就是弹性布局，用来为盒状模型提供最大的灵活性。\n任何一个容器都可以指定为 Flex 布局：")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("如果为行内元素：")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" inline-flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("需要注意的是，如果为 Flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效。")])]),s._v(" "),a("h2",{attrs:{id:"容器的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器的属性"}},[s._v("#")]),s._v(" 容器的属性")]),s._v(" "),a("ul",[a("li",[s._v("flex-direction")]),s._v(" "),a("li",[s._v("flex-wrap")]),s._v(" "),a("li",[s._v("flex-flow")]),s._v(" "),a("li",[s._v("justify-content")]),s._v(" "),a("li",[s._v("align-items")]),s._v(" "),a("li",[s._v("align-content")])]),s._v(" "),a("h3",{attrs:{id:"flex-direction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[s._v("#")]),s._v(" flex-direction")]),s._v(" "),a("p",[s._v("flex-direction 属性决定主轴的方向（即项目的排列方向）。\n有四个可选值：")]),s._v(" "),a("ul",[a("li",[s._v("row（默认值）：主轴为水平方向，起点在左端。")]),s._v(" "),a("li",[s._v("row-reverse：主轴为水平方向，起点在右端。")]),s._v(" "),a("li",[s._v("column：主轴为垂直方向，起点在上沿。")]),s._v(" "),a("li",[s._v("column-reverse：主轴为垂直方向，起点在下沿。")])]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" row | row-reverse | column | column-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"flex-wrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[s._v("#")]),s._v(" flex-wrap")]),s._v(" "),a("p",[s._v('默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap 属性定义，如果一条轴线排不下，如何换行。\n有三个可选值：')]),s._v(" "),a("ul",[a("li",[s._v("nowrap：（默认）不换行。")]),s._v(" "),a("li",[s._v("wrap：换行，第一行在上方。")]),s._v(" "),a("li",[s._v("wrap-reverse：换行，第一行在下方")])]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nowrap | wrap | wrap-reverse\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"flex-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[s._v("#")]),s._v(" flex-flow")]),s._v(" "),a("p",[s._v("flex-flow 属性是 flex-direction 属性和 flex-wrap 属性的简写形式，默认值为 row nowrap。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-flow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <flex-direction> || <flex-wrap>\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"justify-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[s._v("#")]),s._v(" justify-content")]),s._v(" "),a("p",[s._v("justify-content 属性定义了项目在主轴上的对齐方式。\n有五个可选值：")]),s._v(" "),a("ul",[a("li",[s._v("flex-start：（默认值）左对齐")]),s._v(" "),a("li",[s._v("flex-end：右对齐")]),s._v(" "),a("li",[s._v("center：居中")]),s._v(" "),a("li",[s._v("space-between：两端对齐，项目之间的间隔都相等。")]),s._v(" "),a("li",[s._v("space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")])]),s._v(" "),a("h3",{attrs:{id:"align-items"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[s._v("#")]),s._v(" align-items")]),s._v(" "),a("p",[s._v("align-items 属性定义项目在交叉轴上如何对齐\n有五个可选的属性：")]),s._v(" "),a("ul",[a("li",[s._v("flex-start：交叉轴的起点对齐")]),s._v(" "),a("li",[s._v("flex-end：交叉轴的终点对齐")]),s._v(" "),a("li",[s._v("center：交叉轴的中点对齐")]),s._v(" "),a("li",[s._v("baseline：项目的第一行文字的基线对齐")]),s._v(" "),a("li",[s._v("stretch（默认值）：如果项目未设置高度或设为 auto，将占满整个容器的高度")])]),s._v(" "),a("p",[s._v("如果每个项目的高度都是一样的，设置 align-items 属性是没有变化的，他是根据项目中元素的高度进行对齐。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" flex-start | flex-end | center | baseline | stretch\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"align-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[s._v("#")]),s._v(" align-content")]),s._v(" "),a("p",[s._v("align-content 属性定义了多根轴线的对齐方式。如果项目中只有一根轴线，该属性不起作用；\n有六个可选属性")]),s._v(" "),a("ul",[a("li",[s._v("flex-start：与交叉轴的起点对齐")]),s._v(" "),a("li",[s._v("flex-end：与交叉轴的终点对齐")]),s._v(" "),a("li",[s._v("center：与交叉轴的中点对齐")]),s._v(" "),a("li",[s._v("space-between：与交叉轴两端对齐，轴线之间的间隔平均分布")]),s._v(" "),a("li",[s._v("space-around：每根轴线两侧禅道间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍\nstretch（默认值）：轴线占满整个交叉轴")])]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".box")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" flex-start | flex-end | center | space-between | space-around | stretch\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"项目的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目的属性"}},[s._v("#")]),s._v(" 项目的属性")]),s._v(" "),a("p",[s._v("项目的属性主要有下面几种：")]),s._v(" "),a("ul",[a("li",[s._v("order")]),s._v(" "),a("li",[s._v("flex-grow")]),s._v(" "),a("li",[s._v("flex-shrink")]),s._v(" "),a("li",[s._v("flex-basis")]),s._v(" "),a("li",[s._v("flex")]),s._v(" "),a("li",[s._v("align-self")])]),s._v(" "),a("h3",{attrs:{id:"order"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[s._v("#")]),s._v(" order")]),s._v(" "),a("p",[s._v("order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为 0")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".item")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <integer>\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"flex-grow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[s._v("#")]),s._v(" flex-grow")]),s._v(" "),a("p",[s._v("flex-grow 属性定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大；\n如果所项目的 flex-grow 属性都为 1，则他们将等分剩余空间（如果有的话），如果一个项目的 flex-grow 属性为 2，其他项目都为 1，\n则前者占据的剩余空间将比其他项多一倍；")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".item")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <number> "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* default 0 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"flex-shrink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[s._v("#")]),s._v(" flex-shrink")]),s._v(" "),a("p",[s._v("flex-shrink 属性定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小；\n如果所有的项目的 flex-shrink 属性都为 1，当空间不足时，都将等比例缩小，如果一个项目的 flex-shrink 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".item")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-shrink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <number> "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* default 1 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"flex-basis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[s._v("#")]),s._v(" flex-basis")]),s._v(" "),a("p",[s._v("flex-basis 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。他的默认值为 auto，即项目的本来大小；\n他可以设置 width 或者 height 属性一样的值，则项目将占据固定空间。\n设置固定值，则浏览器窗口缩小的时候，项目的占据的空间就是设置的值，不会等比例缩小。")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".item")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex-basis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" <length> | auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* default auto*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[s._v("#")]),s._v(" flex")]),s._v(" "),a("p",[s._v("flex 属性是 flex-grow、flex-shrink 和 flex-basis 的简写；默认值为 0 1 auto。"),a("code",[s._v("后面两个属性可选")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("该属性有两个快捷值：auto （1 1 auto）和 none （0 0 auto）；建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")])]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".item")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" none | [<"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'flex-grow'")]),s._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" <"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'flex-shrink'")]),s._v(">? || <"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'flex-basis'")]),s._v(">]\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"align-self"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[s._v("#")]),s._v(" align-self")]),s._v(" "),a("p",[s._v("align-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，\n如果没有父元素，则等同于 stretch。")]),s._v(" "),a("p",[s._v("该属性有六个可选属性值，除了 auto，其他都与 align-items 属性完全一致；")]),s._v(" "),a("Valine")],1)}),[],!1,null,null,null);t.default=n.exports}}]);